version: '3.8'
services:
  eureka-server:
    image: eureka-server:latest
    build:
      context: ./eureka
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - microservice-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - microservice-network

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks:
      - microservice-network

  kafka:
    image: wurstmeister/kafka:2.13-2.6.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - microservice-network

  api-gateway:
    image: api-gateway:latest
    build:
      context: ./apigateway
      dockerfile: Dockerfile
    ports:
      - "8060:8060"
    depends_on:
      - eureka-server
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
    networks:
      - microservice-network

  cart-service:
    image: cart-service:latest
    build:
      context: ./cart
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DB=shopping-cart
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
    ports:
      - "8086:8086"
    depends_on:
      - eureka-server
      - mongodb
    networks:
      - microservice-network

  order-service:
    image: order-service:latest
    build:
      context: ./order
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DB=shopping-order
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
    ports:
      - "8085:8085"
    depends_on:
      - eureka-server
      - mongodb
    networks:
      - microservice-network

  payment-service:
    image: payment-service:latest
    build:
      context: ./payment
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DB=shopping-payment
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
    ports:
      - "9090:9090"
    depends_on:
      - eureka-server
      - mongodb
    networks:
      - microservice-network

  mariadb:
    image: mariadb:latest
    environment:
      MARIADB_ROOT_PASSWORD: root
      MARIADB_DATABASE: user
    ports:
      - "3306:3306"
    networks:
      - microservice-network

  user-service:
    image: user-service:latest
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/user
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.mariadb.jdbc.Driver
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
    build:
      context: ./user
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - eureka-server
      - mariadb
    networks:
      - microservice-network

  review-service:
    image: review-service:latest
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mariadb://mariadb:3306/review
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.mariadb.jdbc.Driver
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
    build:
      context: ./review
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
      - mariadb
    networks:
      - microservice-network

  product-command:
    image: product-command:latest
    build:
      context: ./product-command
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DB=shopping-product
      - KAFKA_SERVER=http://localhost:9092
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
    depends_on:
      - eureka-server
      - mongodb
      - kafka
    networks:
      - microservice-network

  product-query:
    image: product-query:latest
    build:
      context: ./product-query
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DB=shopping-product
      - KAFKA_SERVER=http://localhost:9092
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
    depends_on:
      - eureka-server
      - mongodb
      - kafka
    networks:
      - microservice-network



networks:
  microservice-network:
    driver: bridge