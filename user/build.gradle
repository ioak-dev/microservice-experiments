plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	//implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	// https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.4.0'
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.5'
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.5'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-logging
	implementation 'org.springframework.boot:spring-boot-starter-logging'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
	environment 'SPRING_DATASOURCE_URL','jdbc:mariadb://localhost:3306/user'
	environment 'SPRING_DATASOURCE_USERNAME', 'root'
	environment 'SPRING_DATASOURCE_PASSWORD', 'root'
	environment 'SPRING_DATASOURCE_DRIVER_CLASS_NAME', 'org.mariadb.jdbc.Driver'
	environment 'SPRING_JPA_HIBERNATE_DDL_AUTO', 'update'
    environment 'SPRING_JPA_SHOW_SQL','true'
}

tasks.withType(Test) {
    environment 'SPRING_DATASOURCE_URL', 'jdbc:mariadb://localhost:3306/user'
    environment 'SPRING_DATASOURCE_USERNAME', 'root'
    environment 'SPRING_DATASOURCE_PASSWORD', 'root'
    environment 'SPRING_DATASOURCE_DRIVER_CLASS_NAME', 'org.mariadb.jdbc.Driver'
    environment 'SPRING_JPA_HIBERNATE_DDL_AUTO', 'update'
    environment 'SPRING_JPA_SHOW_SQL','true'
}
